{"version":3,"sources":["Forums/Forums.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DownDetectorStyled","styled","div","TableStyled","Forums","useState","forumsStatus","setForumsStatus","loading","setLoading","date","setDate","fetchWithTimeout","link","time","a","controller","AbortController","id","setTimeout","abort","fetch","signal","response","clearTimeout","fetchApi","ok","Error","json","console","log","key","name","word","status","SteamCqloud","downLink","VerizonSteam","VerizonDailymotion","VerizonSony","VerizonXbox","VerizonCloud","VerizonDisney","month","year","useEffect","columns","title","dataIndex","render","text","record","href","target","BarChartOutlined","style","textAlign","size","dataSource","pagination","AppView","Center","Title","MyRow","MainView","App","marginBottom","src","width","height","marginTop","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4a0dc446.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Table } from \"antd\";\r\nimport 'antd/dist/antd.css'\r\nimport { Spin } from 'antd';\r\nimport {BarChartOutlined } from '@ant-design/icons';\r\n\r\nconst DownDetectorStyled = styled.div`\r\n  \r\n`;\r\n\r\n\r\n\r\nconst LinksList = styled.div``;\r\nconst TableStyled = styled.div`\r\npadding-left:1vh;\r\npadding-right: 1vh;\r\nbox-shadow: 0 4px 8px 0 rgba(0,0,0,0.05);\r\n`;\r\n\r\nexport interface ForumsApiResponse {\r\n    SteamCqloud: string;\r\n    VerizonSteam: string;\r\n    VerizonDailymotion: string;\r\n    VerizonSony: string;\r\n    VerizonXbox: string;\r\n    VerizonCloud: string;\r\n    VerizonDisney: string;\r\n    status: string;\r\n    month: string;\r\n    year: string;\r\n  }\r\n  \r\ninterface TableData{\r\n    key: string;\r\n    name: string;\r\n    word:string;\r\n    status: string;\r\n    imgLink?:string\r\n    downLink:string;\r\n}\r\n\r\nfunction Forums() {\r\n    const [forumsStatus,setForumsStatus] = useState<TableData[]>();\r\n    const [loading,setLoading] =useState(true);\r\n    const [date,setDate] = useState<string>(\"\");\r\n\r\n    const fetchWithTimeout= async (link:string, time:number)=>{      \r\n      const controller = new AbortController();\r\n      const id = setTimeout(() => controller.abort(), time);\r\n      const response = await fetch(link, {\r\n        signal: controller.signal  \r\n      });\r\n      clearTimeout(id);\r\n      return response;\r\n    }\r\n\r\n    const fetchApi=async()=>{\r\n      try{\r\n        const response = await fetchWithTimeout(\"https://dd-api-maximus.herokuapp.com/forums\",30000)\r\n        if (!response.ok) {\r\n          // make the promise be rejected if we didn't get a 2xx response\r\n          throw new Error(\"Not 2xx response\")\r\n        } else {\r\n            // go the desired response\r\n            const json:ForumsApiResponse = await response.json();\r\n            console.log(json)\r\n            setForumsStatus([\r\n                {key:\"SteamCqloud\",name:\"Steam\",word:\"cqloud\",status:json.SteamCqloud,downLink:\"https://steamcommunity.com/discussions/forum/search/?q=cqloud&sort=time\"},\r\n                {key:\"VerizonSteam\",name:\"Verizon\",word:\"steam\",status:json.VerizonSteam,downLink:\"https://forums.verizon.com/t5/forums/searchpage/tab/message?q=steam&noSynonym=false&inactive=false&sort_by=-topicPostDate&collapse_discussion=true\"},\r\n                {key:\"VerizonDM\",name:\"Verizon\",word:\"Dailymotion\",status:json.VerizonDailymotion,downLink:\"https://forums.verizon.com/t5/forums/searchpage/tab/message?q=Dailymotion&noSynonym=false&inactive=false&sort_by=-topicPostDate&collapse_discussion=true\"},\r\n                {key:\"VerizonSony\",name:\"Verizon\",word:\"sony\",status:json.VerizonSony,downLink:\"https://forums.verizon.com/t5/forums/searchpage/tab/message?q=Sony&noSynonym=false&inactive=false&sort_by=-topicPostDate&collapse_discussion=true\"},\r\n                {key:\"VerizonXbox\",name:\"Verizon\",word:\"xbox\",status:json.VerizonXbox,downLink:\"https://forums.verizon.com/t5/forums/searchpage/tab/message?q=xbox&noSynonym=false&inactive=false&sort_by=-topicPostDate&collapse_discussion=true\"},\r\n                {key:\"VerizonCqloud\",name:\"Verizon\",word:\"cqloud\",status:json.VerizonCloud,downLink:\"https://forums.verizon.com/t5/forums/searchpage/tab/message?sort_by=-topicPostDate&collapse_discussion=true&q=cqloud&noSynonym=false&inactive=false&q=cqloud&nospellcheck=true\"},\r\n                {key:\"VerizonDisney\",name:\"Verizon\",word:\"disney\",status:json.VerizonDisney,downLink:\"https://forums.verizon.com/t5/forums/searchpage/tab/message?q=Disney%2B&noSynonym=false&nospellcheck=true&inactive=false&sort_by=-topicPostDate&collapse_discussion=true\"},\r\n            ])\r\n            setDate(json.month+\" \"+json.year)\r\n            setLoading(false);\r\n        } \r\n      }\r\n      catch(err)\r\n      {\r\n        console.log(err)\r\n        setLoading(false);\r\n\r\n      }\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n       fetchApi(); \r\n    },[]);\r\n\r\n      \r\n      const columns = [\r\n        {\r\n          title: 'Forum',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Search word',\r\n            dataIndex: 'word',\r\n            key: 'word',\r\n  \r\n          },\r\n        {\r\n          title: 'Status',\r\n          dataIndex: 'status',\r\n          key: 'status',\r\n        },\r\n        {\r\n            title: 'Link',\r\n            dataIndex: 'downLink',\r\n            key: 'downLink',\r\n            render: (text:string, record:TableData) => <a href={text} target=\"_blank\"><BarChartOutlined /></a>\r\n          },\r\n         \r\n      ];\r\n      \r\n      \r\n\r\n  return (\r\n    <DownDetectorStyled>\r\n        <h2 style={{textAlign:\"center\"}} >Forums</h2>\r\n        <p style={{textAlign:\"center\"}}>{date}</p>\r\n        {!loading?<TableStyled> <Table dataSource={forumsStatus} columns={columns} pagination={false} /></TableStyled>:<Spin size=\"small\" />}\r\n        \r\n    </DownDetectorStyled>\r\n  );\r\n}\r\n\r\nexport default Forums;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DownDetector from \"./Downdetctor/DownDetector\";\r\nimport Forums from \"./Forums/Forums\";\r\nimport HistoryDownDetector from \"./historyDownDetector/HistoryDownDetector\";\r\n\r\nconst AppView = styled.div`\r\n   padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  \r\n`;\r\n\r\nconst MyRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  \r\n`;\r\n\r\nconst MainView = styled.div`\r\n  \r\n  border:1px rgba(220, 213, 213,0.3) solid;\r\n  margin:3vh;\r\n  padding: 4vh;\r\n  \r\n`;\r\n\r\nfunction App() {\r\n \r\n\r\n  return (\r\n    <AppView>\r\n      <Title>\r\n      <h1 style={{textAlign:\"center\",marginBottom:\"10vh\"}} >Qwilt-NOC monitoring</h1>\r\n      </Title>\r\n      <Center>\r\n      <img src={\"https://image.flaticon.com/icons/png/512/1055/1055679.png\"} width={\"90px\"} height={\"90px\"} style={{marginTop:\"-70px\",marginBottom:\"5vh\"}}></img>\r\n      </Center>\r\n    \r\n      <Center>\r\n      <MainView>\r\n        <MyRow>\r\n          {/* <DownDetector></DownDetector> */}\r\n          <Forums></Forums>\r\n        </MyRow>\r\n      </MainView>\r\n    \r\n      </Center>\r\n   \r\n     \r\n    </AppView>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}